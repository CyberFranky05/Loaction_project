events {
    worker_connections 1024;
}

http {
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name mrelectron.xyz app.mrelectron.xyz api.mrelectron.xyz auth.mrelectron.xyz;

        # Allow certbot challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main app - mrelectron.xyz
    server {
        listen 443 ssl http2;
        server_name mrelectron.xyz;

        ssl_certificate /etc/letsencrypt/live/mrelectron.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mrelectron.xyz/privkey.pem;

        limit_req zone=general burst=20 nodelay;

        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # App subdomain - app.mrelectron.xyz
    server {
        listen 443 ssl http2;
        server_name app.mrelectron.xyz;

        ssl_certificate /etc/letsencrypt/live/mrelectron.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mrelectron.xyz/privkey.pem;

        limit_req zone=general burst=20 nodelay;

        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # API - api.mrelectron.xyz
    server {
        listen 443 ssl http2;
        server_name api.mrelectron.xyz;

        ssl_certificate /etc/letsencrypt/live/mrelectron.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mrelectron.xyz/privkey.pem;

        limit_req zone=api burst=50 nodelay;

        # Larger body size for API requests
        client_max_body_size 10M;

        location / {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # CORS headers (if not handled by backend)
            add_header Access-Control-Allow-Origin "https://mrelectron.xyz" always;
            add_header Access-Control-Allow-Origin "https://app.mrelectron.xyz" always;
        }
    }

    # Keycloak - auth.mrelectron.xyz
    server {
        listen 443 ssl http2;
        server_name auth.mrelectron.xyz;

        ssl_certificate /etc/letsencrypt/live/mrelectron.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mrelectron.xyz/privkey.pem;

        limit_req zone=api burst=30 nodelay;

        # Larger body size for Keycloak
        client_max_body_size 20M;

        location / {
            proxy_pass http://keycloak:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_cache_bypass $http_upgrade;

            # Keycloak specific headers
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
    }
}
